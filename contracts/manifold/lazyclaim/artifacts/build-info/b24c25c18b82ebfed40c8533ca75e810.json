{
	"id": "b24c25c18b82ebfed40c8533ca75e810",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/manifold/lazyclaim/IERC1155LazyPayableClaim.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/// @author: manifold.xyz\n\n/**\n * Lazy Claim interface\n */\ninterface IERC1155LazyPayableClaim {\n    enum StorageProtocol { INVALID, NONE, ARWEAVE, IPFS }\n\n    struct ClaimParameters {\n        uint32 totalMax;\n        uint32 walletMax;\n        uint48 startDate;\n        uint48 endDate;\n        StorageProtocol storageProtocol;\n        bytes32 merkleRoot;\n        string location;\n        uint cost;\n        address paymentReceiver;\n    }\n\n    struct Claim {\n        uint32 total;\n        uint32 totalMax;\n        uint32 walletMax;\n        uint48 startDate;\n        uint48 endDate;\n        StorageProtocol storageProtocol;\n        bytes32 merkleRoot;\n        string location;\n        uint tokenId;\n        uint cost;\n        address paymentReceiver;\n    }\n\n    event ClaimInitialized(address indexed creatorContract, uint224 indexed claimIndex, address initializer);\n    event ClaimMint(address indexed creatorContract, uint256 indexed claimIndex);\n    event ClaimMintBatch(address indexed creatorContract, uint256 indexed claimIndex, uint16 mintCount);\n\n    /**\n     * @notice initialize a new claim, emit initialize event, and return the newly created index\n     * @param creatorContractAddress    the creator contract the claim will mint tokens for\n     * @param claimParameters           the parameters which will affect the minting behavior of the claim\n     * @return                          the index of the newly created claim\n     */\n    function initializeClaim(address creatorContractAddress, ClaimParameters calldata claimParameters) external returns(uint256);\n\n    /**\n     * @notice update an existing claim at claimIndex\n     * @param creatorContractAddress    the creator contract corresponding to the claim\n     * @param claimIndex                the index of the claim in the list of creatorContractAddress' _claims\n     * @param claimParameters           the parameters which will affect the minting behavior of the claim\n     */\n    function updateClaim(address creatorContractAddress, uint256 claimIndex, ClaimParameters calldata claimParameters) external;\n\n/**\n     * @notice get the number of _claims initialized for a given creator contract\n     * @param creatorContractAddress    the address of the creator contract\n     * @return                          the number of _claims initialized for this creator contract\n     */\n    function getClaimCount(address creatorContractAddress) external view returns(uint256);\n\n    /**\n     * @notice get a claim corresponding to a creator contract and index\n     * @param creatorContractAddress    the address of the creator contract\n     * @param claimIndex                the index of the claim\n     * @return                          the claim object\n     */\n    function getClaim(address creatorContractAddress, uint256 claimIndex) external view returns(Claim memory);\n\n    /**\n     * @notice check if a mint index has been consumed or not (only for merkle claims)\n     *\n     * @param creatorContractAddress    the address of the creator contract for the claim\n     * @param claimIndex                the index of the claim\n     * @param mintIndex                 the mint index of the claim\n     * @return                          whether or not the mint index was consumed\n     */\n    function checkMintIndex(address creatorContractAddress, uint256 claimIndex, uint32 mintIndex) external view returns(bool);\n\n    /**\n     * @notice check if multiple mint indices has been consumed or not (only for merkle claims)\n     *\n     * @param creatorContractAddress    the address of the creator contract for the claim\n     * @param claimIndex                the index of the claim\n     * @param mintIndices               the mint index of the claim\n     * @return                          whether or not the mint index was consumed\n     */\n    function checkMintIndices(address creatorContractAddress, uint256 claimIndex, uint32[] calldata mintIndices) external view returns(bool[] memory);\n\n    /**\n     * @notice get mints made for a wallet (only for non-merkle claims with walletMax)\n     *\n     * @param minter                    the address of the minting address\n     * @param creatorContractAddress    the address of the creator contract for the claim\n     * @param claimIndex                the index of the claim\n     * @return                          how many mints the minter has made\n     */\n    function getTotalMints(address minter, address creatorContractAddress, uint256 claimIndex) external view returns(uint32);\n\n    /**\n     * @notice allow a wallet to lazily claim a token according to parameters\n     * @param creatorContractAddress    the creator contract address\n     * @param claimIndex                the index of the claim for which we will mint\n     * @param mintIndex                 the mint index (only needed for merkle claims)\n     * @param merkleProof               if the claim has a merkleRoot, verifying merkleProof ensures that address + minterValue was used to construct it  (only needed for merkle claims)\n     */\n    function mint(address creatorContractAddress, uint256 claimIndex, uint32 mintIndex, bytes32[] calldata merkleProof, address mintFor) external payable;\n\n    /**\n     * @notice allow a wallet to lazily claim a token according to parameters\n     * @param creatorContractAddress    the creator contract address\n     * @param claimIndex                the index of the claim for which we will mint\n     * @param mintCount                 the number of claims to mint\n     * @param mintIndices               the mint index (only needed for merkle claims)\n     * @param merkleProofs              if the claim has a merkleRoot, verifying merkleProof ensures that address + minterValue was used to construct it  (only needed for merkle claims)\n     */\n    function mintBatch(address creatorContractAddress, uint256 claimIndex, uint16 mintCount, uint32[] calldata mintIndices, bytes32[][] calldata merkleProofs, address mintFor) external payable;\n\n    /**\n     * @notice allow admin to airdrop arbitrary tokens \n     * @param creatorContractAddress    the creator contract the claim will mint tokens for\n     * @param claimIndex                the index of the claim in the list of creatorContractAddress' _claims\n     * @param recipients                addresses to airdrop to\n     * @param amounts                   number of tokens to airdrop to each address in addresses\n     */\n    function airdrop(address creatorContractAddress, uint256 claimIndex, address[] calldata recipients, uint16[] calldata amounts) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/manifold/lazyclaim/IERC1155LazyPayableClaim.sol": {
				"IERC1155LazyPayableClaim": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "creatorContract",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint224",
									"name": "claimIndex",
									"type": "uint224"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "initializer",
									"type": "address"
								}
							],
							"name": "ClaimInitialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "creatorContract",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "claimIndex",
									"type": "uint256"
								}
							],
							"name": "ClaimMint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "creatorContract",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "claimIndex",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "mintCount",
									"type": "uint16"
								}
							],
							"name": "ClaimMintBatch",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "creatorContractAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "claimIndex",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "recipients",
									"type": "address[]"
								},
								{
									"internalType": "uint16[]",
									"name": "amounts",
									"type": "uint16[]"
								}
							],
							"name": "airdrop",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "creatorContractAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "claimIndex",
									"type": "uint256"
								},
								{
									"internalType": "uint32",
									"name": "mintIndex",
									"type": "uint32"
								}
							],
							"name": "checkMintIndex",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "creatorContractAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "claimIndex",
									"type": "uint256"
								},
								{
									"internalType": "uint32[]",
									"name": "mintIndices",
									"type": "uint32[]"
								}
							],
							"name": "checkMintIndices",
							"outputs": [
								{
									"internalType": "bool[]",
									"name": "",
									"type": "bool[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "creatorContractAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "claimIndex",
									"type": "uint256"
								}
							],
							"name": "getClaim",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint32",
											"name": "total",
											"type": "uint32"
										},
										{
											"internalType": "uint32",
											"name": "totalMax",
											"type": "uint32"
										},
										{
											"internalType": "uint32",
											"name": "walletMax",
											"type": "uint32"
										},
										{
											"internalType": "uint48",
											"name": "startDate",
											"type": "uint48"
										},
										{
											"internalType": "uint48",
											"name": "endDate",
											"type": "uint48"
										},
										{
											"internalType": "enum IERC1155LazyPayableClaim.StorageProtocol",
											"name": "storageProtocol",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "merkleRoot",
											"type": "bytes32"
										},
										{
											"internalType": "string",
											"name": "location",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "cost",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "paymentReceiver",
											"type": "address"
										}
									],
									"internalType": "struct IERC1155LazyPayableClaim.Claim",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "creatorContractAddress",
									"type": "address"
								}
							],
							"name": "getClaimCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "minter",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "creatorContractAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "claimIndex",
									"type": "uint256"
								}
							],
							"name": "getTotalMints",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "creatorContractAddress",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "uint32",
											"name": "totalMax",
											"type": "uint32"
										},
										{
											"internalType": "uint32",
											"name": "walletMax",
											"type": "uint32"
										},
										{
											"internalType": "uint48",
											"name": "startDate",
											"type": "uint48"
										},
										{
											"internalType": "uint48",
											"name": "endDate",
											"type": "uint48"
										},
										{
											"internalType": "enum IERC1155LazyPayableClaim.StorageProtocol",
											"name": "storageProtocol",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "merkleRoot",
											"type": "bytes32"
										},
										{
											"internalType": "string",
											"name": "location",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "cost",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "paymentReceiver",
											"type": "address"
										}
									],
									"internalType": "struct IERC1155LazyPayableClaim.ClaimParameters",
									"name": "claimParameters",
									"type": "tuple"
								}
							],
							"name": "initializeClaim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "creatorContractAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "claimIndex",
									"type": "uint256"
								},
								{
									"internalType": "uint32",
									"name": "mintIndex",
									"type": "uint32"
								},
								{
									"internalType": "bytes32[]",
									"name": "merkleProof",
									"type": "bytes32[]"
								},
								{
									"internalType": "address",
									"name": "mintFor",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "creatorContractAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "claimIndex",
									"type": "uint256"
								},
								{
									"internalType": "uint16",
									"name": "mintCount",
									"type": "uint16"
								},
								{
									"internalType": "uint32[]",
									"name": "mintIndices",
									"type": "uint32[]"
								},
								{
									"internalType": "bytes32[][]",
									"name": "merkleProofs",
									"type": "bytes32[][]"
								},
								{
									"internalType": "address",
									"name": "mintFor",
									"type": "address"
								}
							],
							"name": "mintBatch",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "creatorContractAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "claimIndex",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "uint32",
											"name": "totalMax",
											"type": "uint32"
										},
										{
											"internalType": "uint32",
											"name": "walletMax",
											"type": "uint32"
										},
										{
											"internalType": "uint48",
											"name": "startDate",
											"type": "uint48"
										},
										{
											"internalType": "uint48",
											"name": "endDate",
											"type": "uint48"
										},
										{
											"internalType": "enum IERC1155LazyPayableClaim.StorageProtocol",
											"name": "storageProtocol",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "merkleRoot",
											"type": "bytes32"
										},
										{
											"internalType": "string",
											"name": "location",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "cost",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "paymentReceiver",
											"type": "address"
										}
									],
									"internalType": "struct IERC1155LazyPayableClaim.ClaimParameters",
									"name": "claimParameters",
									"type": "tuple"
								}
							],
							"name": "updateClaim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"airdrop(address,uint256,address[],uint16[])": {
								"params": {
									"amounts": "number of tokens to airdrop to each address in addresses",
									"claimIndex": "the index of the claim in the list of creatorContractAddress' _claims",
									"creatorContractAddress": "the creator contract the claim will mint tokens for",
									"recipients": "addresses to airdrop to"
								}
							},
							"checkMintIndex(address,uint256,uint32)": {
								"params": {
									"claimIndex": "the index of the claim",
									"creatorContractAddress": "the address of the creator contract for the claim",
									"mintIndex": "the mint index of the claim"
								},
								"returns": {
									"_0": "whether or not the mint index was consumed"
								}
							},
							"checkMintIndices(address,uint256,uint32[])": {
								"params": {
									"claimIndex": "the index of the claim",
									"creatorContractAddress": "the address of the creator contract for the claim",
									"mintIndices": "the mint index of the claim"
								},
								"returns": {
									"_0": "whether or not the mint index was consumed"
								}
							},
							"getClaim(address,uint256)": {
								"params": {
									"claimIndex": "the index of the claim",
									"creatorContractAddress": "the address of the creator contract"
								},
								"returns": {
									"_0": "the claim object"
								}
							},
							"getClaimCount(address)": {
								"params": {
									"creatorContractAddress": "the address of the creator contract"
								},
								"returns": {
									"_0": "the number of _claims initialized for this creator contract"
								}
							},
							"getTotalMints(address,address,uint256)": {
								"params": {
									"claimIndex": "the index of the claim",
									"creatorContractAddress": "the address of the creator contract for the claim",
									"minter": "the address of the minting address"
								},
								"returns": {
									"_0": "how many mints the minter has made"
								}
							},
							"initializeClaim(address,(uint32,uint32,uint48,uint48,uint8,bytes32,string,uint256,address))": {
								"params": {
									"claimParameters": "the parameters which will affect the minting behavior of the claim",
									"creatorContractAddress": "the creator contract the claim will mint tokens for"
								},
								"returns": {
									"_0": "the index of the newly created claim"
								}
							},
							"mint(address,uint256,uint32,bytes32[],address)": {
								"params": {
									"claimIndex": "the index of the claim for which we will mint",
									"creatorContractAddress": "the creator contract address",
									"merkleProof": "if the claim has a merkleRoot, verifying merkleProof ensures that address + minterValue was used to construct it  (only needed for merkle claims)",
									"mintIndex": "the mint index (only needed for merkle claims)"
								}
							},
							"mintBatch(address,uint256,uint16,uint32[],bytes32[][],address)": {
								"params": {
									"claimIndex": "the index of the claim for which we will mint",
									"creatorContractAddress": "the creator contract address",
									"merkleProofs": "if the claim has a merkleRoot, verifying merkleProof ensures that address + minterValue was used to construct it  (only needed for merkle claims)",
									"mintCount": "the number of claims to mint",
									"mintIndices": "the mint index (only needed for merkle claims)"
								}
							},
							"updateClaim(address,uint256,(uint32,uint32,uint48,uint48,uint8,bytes32,string,uint256,address))": {
								"params": {
									"claimIndex": "the index of the claim in the list of creatorContractAddress' _claims",
									"claimParameters": "the parameters which will affect the minting behavior of the claim",
									"creatorContractAddress": "the creator contract corresponding to the claim"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"airdrop(address,uint256,address[],uint16[])": "5f2f5129",
							"checkMintIndex(address,uint256,uint32)": "cda08536",
							"checkMintIndices(address,uint256,uint32[])": "f8a6137b",
							"getClaim(address,uint256)": "0f79ab39",
							"getClaimCount(address)": "d5fdfe87",
							"getTotalMints(address,address,uint256)": "42f3bef4",
							"initializeClaim(address,(uint32,uint32,uint48,uint48,uint8,bytes32,string,uint256,address))": "83b6da80",
							"mint(address,uint256,uint32,bytes32[],address)": "fa2b068f",
							"mintBatch(address,uint256,uint16,uint32[],bytes32[][],address)": "26c858a4",
							"updateClaim(address,uint256,(uint32,uint32,uint48,uint48,uint8,bytes32,string,uint256,address))": "a310099c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creatorContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint224\",\"name\":\"claimIndex\",\"type\":\"uint224\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"initializer\",\"type\":\"address\"}],\"name\":\"ClaimInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creatorContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimIndex\",\"type\":\"uint256\"}],\"name\":\"ClaimMint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creatorContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"mintCount\",\"type\":\"uint16\"}],\"name\":\"ClaimMintBatch\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creatorContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"claimIndex\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint16[]\",\"name\":\"amounts\",\"type\":\"uint16[]\"}],\"name\":\"airdrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creatorContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"claimIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"mintIndex\",\"type\":\"uint32\"}],\"name\":\"checkMintIndex\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creatorContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"claimIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint32[]\",\"name\":\"mintIndices\",\"type\":\"uint32[]\"}],\"name\":\"checkMintIndices\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creatorContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"claimIndex\",\"type\":\"uint256\"}],\"name\":\"getClaim\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"total\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"totalMax\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"walletMax\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"startDate\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endDate\",\"type\":\"uint48\"},{\"internalType\":\"enum IERC1155LazyPayableClaim.StorageProtocol\",\"name\":\"storageProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"paymentReceiver\",\"type\":\"address\"}],\"internalType\":\"struct IERC1155LazyPayableClaim.Claim\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creatorContractAddress\",\"type\":\"address\"}],\"name\":\"getClaimCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"creatorContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"claimIndex\",\"type\":\"uint256\"}],\"name\":\"getTotalMints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creatorContractAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"totalMax\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"walletMax\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"startDate\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endDate\",\"type\":\"uint48\"},{\"internalType\":\"enum IERC1155LazyPayableClaim.StorageProtocol\",\"name\":\"storageProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"paymentReceiver\",\"type\":\"address\"}],\"internalType\":\"struct IERC1155LazyPayableClaim.ClaimParameters\",\"name\":\"claimParameters\",\"type\":\"tuple\"}],\"name\":\"initializeClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creatorContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"claimIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"mintIndex\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"},{\"internalType\":\"address\",\"name\":\"mintFor\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creatorContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"claimIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"mintCount\",\"type\":\"uint16\"},{\"internalType\":\"uint32[]\",\"name\":\"mintIndices\",\"type\":\"uint32[]\"},{\"internalType\":\"bytes32[][]\",\"name\":\"merkleProofs\",\"type\":\"bytes32[][]\"},{\"internalType\":\"address\",\"name\":\"mintFor\",\"type\":\"address\"}],\"name\":\"mintBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creatorContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"claimIndex\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"totalMax\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"walletMax\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"startDate\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endDate\",\"type\":\"uint48\"},{\"internalType\":\"enum IERC1155LazyPayableClaim.StorageProtocol\",\"name\":\"storageProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"paymentReceiver\",\"type\":\"address\"}],\"internalType\":\"struct IERC1155LazyPayableClaim.ClaimParameters\",\"name\":\"claimParameters\",\"type\":\"tuple\"}],\"name\":\"updateClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"airdrop(address,uint256,address[],uint16[])\":{\"params\":{\"amounts\":\"number of tokens to airdrop to each address in addresses\",\"claimIndex\":\"the index of the claim in the list of creatorContractAddress' _claims\",\"creatorContractAddress\":\"the creator contract the claim will mint tokens for\",\"recipients\":\"addresses to airdrop to\"}},\"checkMintIndex(address,uint256,uint32)\":{\"params\":{\"claimIndex\":\"the index of the claim\",\"creatorContractAddress\":\"the address of the creator contract for the claim\",\"mintIndex\":\"the mint index of the claim\"},\"returns\":{\"_0\":\"whether or not the mint index was consumed\"}},\"checkMintIndices(address,uint256,uint32[])\":{\"params\":{\"claimIndex\":\"the index of the claim\",\"creatorContractAddress\":\"the address of the creator contract for the claim\",\"mintIndices\":\"the mint index of the claim\"},\"returns\":{\"_0\":\"whether or not the mint index was consumed\"}},\"getClaim(address,uint256)\":{\"params\":{\"claimIndex\":\"the index of the claim\",\"creatorContractAddress\":\"the address of the creator contract\"},\"returns\":{\"_0\":\"the claim object\"}},\"getClaimCount(address)\":{\"params\":{\"creatorContractAddress\":\"the address of the creator contract\"},\"returns\":{\"_0\":\"the number of _claims initialized for this creator contract\"}},\"getTotalMints(address,address,uint256)\":{\"params\":{\"claimIndex\":\"the index of the claim\",\"creatorContractAddress\":\"the address of the creator contract for the claim\",\"minter\":\"the address of the minting address\"},\"returns\":{\"_0\":\"how many mints the minter has made\"}},\"initializeClaim(address,(uint32,uint32,uint48,uint48,uint8,bytes32,string,uint256,address))\":{\"params\":{\"claimParameters\":\"the parameters which will affect the minting behavior of the claim\",\"creatorContractAddress\":\"the creator contract the claim will mint tokens for\"},\"returns\":{\"_0\":\"the index of the newly created claim\"}},\"mint(address,uint256,uint32,bytes32[],address)\":{\"params\":{\"claimIndex\":\"the index of the claim for which we will mint\",\"creatorContractAddress\":\"the creator contract address\",\"merkleProof\":\"if the claim has a merkleRoot, verifying merkleProof ensures that address + minterValue was used to construct it  (only needed for merkle claims)\",\"mintIndex\":\"the mint index (only needed for merkle claims)\"}},\"mintBatch(address,uint256,uint16,uint32[],bytes32[][],address)\":{\"params\":{\"claimIndex\":\"the index of the claim for which we will mint\",\"creatorContractAddress\":\"the creator contract address\",\"merkleProofs\":\"if the claim has a merkleRoot, verifying merkleProof ensures that address + minterValue was used to construct it  (only needed for merkle claims)\",\"mintCount\":\"the number of claims to mint\",\"mintIndices\":\"the mint index (only needed for merkle claims)\"}},\"updateClaim(address,uint256,(uint32,uint32,uint48,uint48,uint8,bytes32,string,uint256,address))\":{\"params\":{\"claimIndex\":\"the index of the claim in the list of creatorContractAddress' _claims\",\"claimParameters\":\"the parameters which will affect the minting behavior of the claim\",\"creatorContractAddress\":\"the creator contract corresponding to the claim\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"airdrop(address,uint256,address[],uint16[])\":{\"notice\":\"allow admin to airdrop arbitrary tokens \"},\"checkMintIndex(address,uint256,uint32)\":{\"notice\":\"check if a mint index has been consumed or not (only for merkle claims)\"},\"checkMintIndices(address,uint256,uint32[])\":{\"notice\":\"check if multiple mint indices has been consumed or not (only for merkle claims)\"},\"getClaim(address,uint256)\":{\"notice\":\"get a claim corresponding to a creator contract and index\"},\"getClaimCount(address)\":{\"notice\":\"get the number of _claims initialized for a given creator contract\"},\"getTotalMints(address,address,uint256)\":{\"notice\":\"get mints made for a wallet (only for non-merkle claims with walletMax)\"},\"initializeClaim(address,(uint32,uint32,uint48,uint48,uint8,bytes32,string,uint256,address))\":{\"notice\":\"initialize a new claim, emit initialize event, and return the newly created index\"},\"mint(address,uint256,uint32,bytes32[],address)\":{\"notice\":\"allow a wallet to lazily claim a token according to parameters\"},\"mintBatch(address,uint256,uint16,uint32[],bytes32[][],address)\":{\"notice\":\"allow a wallet to lazily claim a token according to parameters\"},\"updateClaim(address,uint256,(uint32,uint32,uint48,uint48,uint8,bytes32,string,uint256,address))\":{\"notice\":\"update an existing claim at claimIndex\"}},\"notice\":\"Lazy Claim interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/manifold/lazyclaim/IERC1155LazyPayableClaim.sol\":\"IERC1155LazyPayableClaim\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/manifold/lazyclaim/IERC1155LazyPayableClaim.sol\":{\"keccak256\":\"0x7c8ff45010cb3b2a87eccecbf09b1153b04f9c01c3979f48c368a18ab6979dbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e191d3ce4d121999f83adfe90af5d5ea78461a63b11be60cc1c75f7383dbbc96\",\"dweb:/ipfs/QmaVSPwf3avEnXVwwt2LUxd97mLxoPmVbvpvxWNTSEg32M\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"airdrop(address,uint256,address[],uint16[])": {
								"notice": "allow admin to airdrop arbitrary tokens "
							},
							"checkMintIndex(address,uint256,uint32)": {
								"notice": "check if a mint index has been consumed or not (only for merkle claims)"
							},
							"checkMintIndices(address,uint256,uint32[])": {
								"notice": "check if multiple mint indices has been consumed or not (only for merkle claims)"
							},
							"getClaim(address,uint256)": {
								"notice": "get a claim corresponding to a creator contract and index"
							},
							"getClaimCount(address)": {
								"notice": "get the number of _claims initialized for a given creator contract"
							},
							"getTotalMints(address,address,uint256)": {
								"notice": "get mints made for a wallet (only for non-merkle claims with walletMax)"
							},
							"initializeClaim(address,(uint32,uint32,uint48,uint48,uint8,bytes32,string,uint256,address))": {
								"notice": "initialize a new claim, emit initialize event, and return the newly created index"
							},
							"mint(address,uint256,uint32,bytes32[],address)": {
								"notice": "allow a wallet to lazily claim a token according to parameters"
							},
							"mintBatch(address,uint256,uint16,uint32[],bytes32[][],address)": {
								"notice": "allow a wallet to lazily claim a token according to parameters"
							},
							"updateClaim(address,uint256,(uint32,uint32,uint48,uint48,uint8,bytes32,string,uint256,address))": {
								"notice": "update an existing claim at claimIndex"
							}
						},
						"notice": "Lazy Claim interface",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/manifold/lazyclaim/IERC1155LazyPayableClaim.sol": {
				"ast": {
					"absolutePath": "contracts/manifold/lazyclaim/IERC1155LazyPayableClaim.sol",
					"exportedSymbols": {
						"IERC1155LazyPayableClaim": [
							201
						]
					},
					"id": 202,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "85:31:0",
								"text": " Lazy Claim interface"
							},
							"fullyImplemented": false,
							"id": 201,
							"linearizedBaseContracts": [
								201
							],
							"name": "IERC1155LazyPayableClaim",
							"nameLocation": "127:24:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IERC1155LazyPayableClaim.StorageProtocol",
									"id": 7,
									"members": [
										{
											"id": 3,
											"name": "INVALID",
											"nameLocation": "181:7:0",
											"nodeType": "EnumValue",
											"src": "181:7:0"
										},
										{
											"id": 4,
											"name": "NONE",
											"nameLocation": "190:4:0",
											"nodeType": "EnumValue",
											"src": "190:4:0"
										},
										{
											"id": 5,
											"name": "ARWEAVE",
											"nameLocation": "196:7:0",
											"nodeType": "EnumValue",
											"src": "196:7:0"
										},
										{
											"id": 6,
											"name": "IPFS",
											"nameLocation": "205:4:0",
											"nodeType": "EnumValue",
											"src": "205:4:0"
										}
									],
									"name": "StorageProtocol",
									"nameLocation": "163:15:0",
									"nodeType": "EnumDefinition",
									"src": "158:53:0"
								},
								{
									"canonicalName": "IERC1155LazyPayableClaim.ClaimParameters",
									"id": 27,
									"members": [
										{
											"constant": false,
											"id": 9,
											"mutability": "mutable",
											"name": "totalMax",
											"nameLocation": "257:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 27,
											"src": "250:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 8,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "250:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 11,
											"mutability": "mutable",
											"name": "walletMax",
											"nameLocation": "282:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 27,
											"src": "275:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 10,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "275:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "startDate",
											"nameLocation": "308:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 27,
											"src": "301:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"typeName": {
												"id": 12,
												"name": "uint48",
												"nodeType": "ElementaryTypeName",
												"src": "301:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 15,
											"mutability": "mutable",
											"name": "endDate",
											"nameLocation": "334:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 27,
											"src": "327:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"typeName": {
												"id": 14,
												"name": "uint48",
												"nodeType": "ElementaryTypeName",
												"src": "327:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "storageProtocol",
											"nameLocation": "367:15:0",
											"nodeType": "VariableDeclaration",
											"scope": 27,
											"src": "351:31:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_StorageProtocol_$7",
												"typeString": "enum IERC1155LazyPayableClaim.StorageProtocol"
											},
											"typeName": {
												"id": 17,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 16,
													"name": "StorageProtocol",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 7,
													"src": "351:15:0"
												},
												"referencedDeclaration": 7,
												"src": "351:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_StorageProtocol_$7",
													"typeString": "enum IERC1155LazyPayableClaim.StorageProtocol"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "merkleRoot",
											"nameLocation": "400:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 27,
											"src": "392:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "392:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 22,
											"mutability": "mutable",
											"name": "location",
											"nameLocation": "427:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 27,
											"src": "420:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 21,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "420:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 24,
											"mutability": "mutable",
											"name": "cost",
											"nameLocation": "450:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 27,
											"src": "445:9:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 23,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "445:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 26,
											"mutability": "mutable",
											"name": "paymentReceiver",
											"nameLocation": "472:15:0",
											"nodeType": "VariableDeclaration",
											"scope": 27,
											"src": "464:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 25,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "464:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ClaimParameters",
									"nameLocation": "224:15:0",
									"nodeType": "StructDefinition",
									"scope": 201,
									"src": "217:277:0",
									"visibility": "public"
								},
								{
									"canonicalName": "IERC1155LazyPayableClaim.Claim",
									"id": 51,
									"members": [
										{
											"constant": false,
											"id": 29,
											"mutability": "mutable",
											"name": "total",
											"nameLocation": "530:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 51,
											"src": "523:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 28,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "523:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 31,
											"mutability": "mutable",
											"name": "totalMax",
											"nameLocation": "552:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 51,
											"src": "545:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 30,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "545:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 33,
											"mutability": "mutable",
											"name": "walletMax",
											"nameLocation": "577:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 51,
											"src": "570:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 32,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "570:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 35,
											"mutability": "mutable",
											"name": "startDate",
											"nameLocation": "603:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 51,
											"src": "596:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"typeName": {
												"id": 34,
												"name": "uint48",
												"nodeType": "ElementaryTypeName",
												"src": "596:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 37,
											"mutability": "mutable",
											"name": "endDate",
											"nameLocation": "629:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 51,
											"src": "622:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"typeName": {
												"id": 36,
												"name": "uint48",
												"nodeType": "ElementaryTypeName",
												"src": "622:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 40,
											"mutability": "mutable",
											"name": "storageProtocol",
											"nameLocation": "662:15:0",
											"nodeType": "VariableDeclaration",
											"scope": 51,
											"src": "646:31:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_StorageProtocol_$7",
												"typeString": "enum IERC1155LazyPayableClaim.StorageProtocol"
											},
											"typeName": {
												"id": 39,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 38,
													"name": "StorageProtocol",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 7,
													"src": "646:15:0"
												},
												"referencedDeclaration": 7,
												"src": "646:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_StorageProtocol_$7",
													"typeString": "enum IERC1155LazyPayableClaim.StorageProtocol"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 42,
											"mutability": "mutable",
											"name": "merkleRoot",
											"nameLocation": "695:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 51,
											"src": "687:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 41,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "687:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 44,
											"mutability": "mutable",
											"name": "location",
											"nameLocation": "722:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 51,
											"src": "715:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 43,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "715:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 46,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "745:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 51,
											"src": "740:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 45,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "740:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 48,
											"mutability": "mutable",
											"name": "cost",
											"nameLocation": "767:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 51,
											"src": "762:9:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 47,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "762:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 50,
											"mutability": "mutable",
											"name": "paymentReceiver",
											"nameLocation": "789:15:0",
											"nodeType": "VariableDeclaration",
											"scope": 51,
											"src": "781:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 49,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "781:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Claim",
									"nameLocation": "507:5:0",
									"nodeType": "StructDefinition",
									"scope": 201,
									"src": "500:311:0",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 59,
									"name": "ClaimInitialized",
									"nameLocation": "823:16:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"indexed": true,
												"mutability": "mutable",
												"name": "creatorContract",
												"nameLocation": "856:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "840:31:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "840:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimIndex",
												"nameLocation": "889:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "873:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint224",
													"typeString": "uint224"
												},
												"typeName": {
													"id": 54,
													"name": "uint224",
													"nodeType": "ElementaryTypeName",
													"src": "873:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"indexed": false,
												"mutability": "mutable",
												"name": "initializer",
												"nameLocation": "909:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "901:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "901:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "839:82:0"
									},
									"src": "817:105:0"
								},
								{
									"anonymous": false,
									"id": 65,
									"name": "ClaimMint",
									"nameLocation": "933:9:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"mutability": "mutable",
												"name": "creatorContract",
												"nameLocation": "959:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "943:31:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "943:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimIndex",
												"nameLocation": "992:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "976:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "942:61:0"
									},
									"src": "927:77:0"
								},
								{
									"anonymous": false,
									"id": 73,
									"name": "ClaimMintBatch",
									"nameLocation": "1015:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"indexed": true,
												"mutability": "mutable",
												"name": "creatorContract",
												"nameLocation": "1046:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "1030:31:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1030:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimIndex",
												"nameLocation": "1079:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "1063:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 68,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1063:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"indexed": false,
												"mutability": "mutable",
												"name": "mintCount",
												"nameLocation": "1098:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "1091:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 70,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1091:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1029:79:0"
									},
									"src": "1009:100:0"
								},
								{
									"documentation": {
										"id": 74,
										"nodeType": "StructuredDocumentation",
										"src": "1115:384:0",
										"text": " @notice initialize a new claim, emit initialize event, and return the newly created index\n @param creatorContractAddress    the creator contract the claim will mint tokens for\n @param claimParameters           the parameters which will affect the minting behavior of the claim\n @return                          the index of the newly created claim"
									},
									"functionSelector": "83b6da80",
									"id": 84,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initializeClaim",
									"nameLocation": "1513:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "creatorContractAddress",
												"nameLocation": "1537:22:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "1529:30:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 75,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1529:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "claimParameters",
												"nameLocation": "1586:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "1561:40:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ClaimParameters_$27_calldata_ptr",
													"typeString": "struct IERC1155LazyPayableClaim.ClaimParameters"
												},
												"typeName": {
													"id": 78,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 77,
														"name": "ClaimParameters",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 27,
														"src": "1561:15:0"
													},
													"referencedDeclaration": 27,
													"src": "1561:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ClaimParameters_$27_storage_ptr",
														"typeString": "struct IERC1155LazyPayableClaim.ClaimParameters"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1528:74:0"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "1620:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1620:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1619:9:0"
									},
									"scope": 201,
									"src": "1504:125:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1635:370:0",
										"text": " @notice update an existing claim at claimIndex\n @param creatorContractAddress    the creator contract corresponding to the claim\n @param claimIndex                the index of the claim in the list of creatorContractAddress' _claims\n @param claimParameters           the parameters which will affect the minting behavior of the claim"
									},
									"functionSelector": "a310099c",
									"id": 95,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateClaim",
									"nameLocation": "2019:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "creatorContractAddress",
												"nameLocation": "2039:22:0",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "2031:30:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2031:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "claimIndex",
												"nameLocation": "2071:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "2063:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2063:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "claimParameters",
												"nameLocation": "2108:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "2083:40:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ClaimParameters_$27_calldata_ptr",
													"typeString": "struct IERC1155LazyPayableClaim.ClaimParameters"
												},
												"typeName": {
													"id": 91,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 90,
														"name": "ClaimParameters",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 27,
														"src": "2083:15:0"
													},
													"referencedDeclaration": 27,
													"src": "2083:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ClaimParameters_$27_storage_ptr",
														"typeString": "struct IERC1155LazyPayableClaim.ClaimParameters"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2030:94:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2133:0:0"
									},
									"scope": 201,
									"src": "2010:124:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 96,
										"nodeType": "StructuredDocumentation",
										"src": "2136:269:0",
										"text": " @notice get the number of _claims initialized for a given creator contract\n @param creatorContractAddress    the address of the creator contract\n @return                          the number of _claims initialized for this creator contract"
									},
									"functionSelector": "d5fdfe87",
									"id": 103,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getClaimCount",
									"nameLocation": "2419:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "creatorContractAddress",
												"nameLocation": "2441:22:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2433:30:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2433:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2432:32:0"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:9:0"
									},
									"scope": 201,
									"src": "2410:86:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "2502:280:0",
										"text": " @notice get a claim corresponding to a creator contract and index\n @param creatorContractAddress    the address of the creator contract\n @param claimIndex                the index of the claim\n @return                          the claim object"
									},
									"functionSelector": "0f79ab39",
									"id": 114,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getClaim",
									"nameLocation": "2796:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "creatorContractAddress",
												"nameLocation": "2813:22:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "2805:30:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2805:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "claimIndex",
												"nameLocation": "2845:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "2837:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2837:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2804:52:0"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "2879:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Claim_$51_memory_ptr",
													"typeString": "struct IERC1155LazyPayableClaim.Claim"
												},
												"typeName": {
													"id": 111,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 110,
														"name": "Claim",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 51,
														"src": "2879:5:0"
													},
													"referencedDeclaration": 51,
													"src": "2879:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Claim_$51_storage_ptr",
														"typeString": "struct IERC1155LazyPayableClaim.Claim"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2878:14:0"
									},
									"scope": 201,
									"src": "2787:106:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "2899:409:0",
										"text": " @notice check if a mint index has been consumed or not (only for merkle claims)\n @param creatorContractAddress    the address of the creator contract for the claim\n @param claimIndex                the index of the claim\n @param mintIndex                 the mint index of the claim\n @return                          whether or not the mint index was consumed"
									},
									"functionSelector": "cda08536",
									"id": 126,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "checkMintIndex",
									"nameLocation": "3322:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "creatorContractAddress",
												"nameLocation": "3345:22:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "3337:30:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3337:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "claimIndex",
												"nameLocation": "3377:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "3369:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3369:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "mintIndex",
												"nameLocation": "3396:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "3389:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 120,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "3389:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3336:70:0"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "3429:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 123,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3429:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3428:6:0"
									},
									"scope": 201,
									"src": "3313:122:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "3441:418:0",
										"text": " @notice check if multiple mint indices has been consumed or not (only for merkle claims)\n @param creatorContractAddress    the address of the creator contract for the claim\n @param claimIndex                the index of the claim\n @param mintIndices               the mint index of the claim\n @return                          whether or not the mint index was consumed"
									},
									"functionSelector": "f8a6137b",
									"id": 140,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "checkMintIndices",
									"nameLocation": "3873:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "creatorContractAddress",
												"nameLocation": "3898:22:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "3890:30:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3890:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "claimIndex",
												"nameLocation": "3930:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "3922:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3922:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "mintIndices",
												"nameLocation": "3960:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "3942:29:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 132,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "3942:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 133,
													"nodeType": "ArrayTypeName",
													"src": "3942:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3889:83:0"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "3995:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
													"typeString": "bool[]"
												},
												"typeName": {
													"baseType": {
														"id": 136,
														"name": "bool",
														"nodeType": "ElementaryTypeName",
														"src": "3995:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 137,
													"nodeType": "ArrayTypeName",
													"src": "3995:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
														"typeString": "bool[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3994:15:0"
									},
									"scope": 201,
									"src": "3864:146:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "4016:408:0",
										"text": " @notice get mints made for a wallet (only for non-merkle claims with walletMax)\n @param minter                    the address of the minting address\n @param creatorContractAddress    the address of the creator contract for the claim\n @param claimIndex                the index of the claim\n @return                          how many mints the minter has made"
									},
									"functionSelector": "42f3bef4",
									"id": 152,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalMints",
									"nameLocation": "4438:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "minter",
												"nameLocation": "4460:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "4452:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4452:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "creatorContractAddress",
												"nameLocation": "4476:22:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "4468:30:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4468:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "claimIndex",
												"nameLocation": "4508:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "4500:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4500:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4451:68:0"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "4542:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 149,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4542:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4541:8:0"
									},
									"scope": 201,
									"src": "4429:121:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "4556:517:0",
										"text": " @notice allow a wallet to lazily claim a token according to parameters\n @param creatorContractAddress    the creator contract address\n @param claimIndex                the index of the claim for which we will mint\n @param mintIndex                 the mint index (only needed for merkle claims)\n @param merkleProof               if the claim has a merkleRoot, verifying merkleProof ensures that address + minterValue was used to construct it  (only needed for merkle claims)"
									},
									"functionSelector": "fa2b068f",
									"id": 167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "5087:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "creatorContractAddress",
												"nameLocation": "5100:22:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "5092:30:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5092:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "claimIndex",
												"nameLocation": "5132:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "5124:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5124:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "mintIndex",
												"nameLocation": "5151:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "5144:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 158,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "5144:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "merkleProof",
												"nameLocation": "5181:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "5162:30:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 160,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "5162:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 161,
													"nodeType": "ArrayTypeName",
													"src": "5162:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "mintFor",
												"nameLocation": "5202:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "5194:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5194:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5091:119:0"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5227:0:0"
									},
									"scope": 201,
									"src": "5078:150:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "5234:586:0",
										"text": " @notice allow a wallet to lazily claim a token according to parameters\n @param creatorContractAddress    the creator contract address\n @param claimIndex                the index of the claim for which we will mint\n @param mintCount                 the number of claims to mint\n @param mintIndices               the mint index (only needed for merkle claims)\n @param merkleProofs              if the claim has a merkleRoot, verifying merkleProof ensures that address + minterValue was used to construct it  (only needed for merkle claims)"
									},
									"functionSelector": "26c858a4",
									"id": 186,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mintBatch",
									"nameLocation": "5834:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "creatorContractAddress",
												"nameLocation": "5852:22:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "5844:30:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5844:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "claimIndex",
												"nameLocation": "5884:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "5876:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "mintCount",
												"nameLocation": "5903:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "5896:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 173,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "5896:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "mintIndices",
												"nameLocation": "5932:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "5914:29:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 175,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "5914:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 176,
													"nodeType": "ArrayTypeName",
													"src": "5914:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "merkleProofs",
												"nameLocation": "5966:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "5945:33:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_array$_t_bytes32_$dyn_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "bytes32[][]"
												},
												"typeName": {
													"baseType": {
														"baseType": {
															"id": 178,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5945:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 179,
														"nodeType": "ArrayTypeName",
														"src": "5945:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
															"typeString": "bytes32[]"
														}
													},
													"id": 180,
													"nodeType": "ArrayTypeName",
													"src": "5945:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_array$_t_bytes32_$dyn_storage_$dyn_storage_ptr",
														"typeString": "bytes32[][]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "mintFor",
												"nameLocation": "5988:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "5980:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5980:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5843:153:0"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6013:0:0"
									},
									"scope": 201,
									"src": "5825:189:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "6020:430:0",
										"text": " @notice allow admin to airdrop arbitrary tokens \n @param creatorContractAddress    the creator contract the claim will mint tokens for\n @param claimIndex                the index of the claim in the list of creatorContractAddress' _claims\n @param recipients                addresses to airdrop to\n @param amounts                   number of tokens to airdrop to each address in addresses"
									},
									"functionSelector": "5f2f5129",
									"id": 200,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "airdrop",
									"nameLocation": "6464:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "creatorContractAddress",
												"nameLocation": "6480:22:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "6472:30:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6472:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "claimIndex",
												"nameLocation": "6512:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "6504:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6504:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "recipients",
												"nameLocation": "6543:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "6524:29:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 192,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "6524:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 193,
													"nodeType": "ArrayTypeName",
													"src": "6524:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "6573:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "6555:25:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint16_$dyn_calldata_ptr",
													"typeString": "uint16[]"
												},
												"typeName": {
													"baseType": {
														"id": 195,
														"name": "uint16",
														"nodeType": "ElementaryTypeName",
														"src": "6555:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"id": 196,
													"nodeType": "ArrayTypeName",
													"src": "6555:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
														"typeString": "uint16[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6471:110:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6590:0:0"
									},
									"scope": 201,
									"src": "6455:136:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 202,
							"src": "117:6476:0",
							"usedErrors": []
						}
					],
					"src": "33:6561:0"
				},
				"id": 0
			}
		}
	}
}