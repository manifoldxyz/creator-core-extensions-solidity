{
	"compiler": {
		"version": "0.8.14+commit.80d49f37"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "creatorContract",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint224",
						"name": "claimIndex",
						"type": "uint224"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "initializer",
						"type": "address"
					}
				],
				"name": "ClaimInitialized",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "creatorContract",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "claimIndex",
						"type": "uint256"
					}
				],
				"name": "ClaimMint",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "creatorContract",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "claimIndex",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint16",
						"name": "mintCount",
						"type": "uint16"
					}
				],
				"name": "ClaimMintBatch",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "creatorContractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "claimIndex",
						"type": "uint256"
					},
					{
						"internalType": "uint32",
						"name": "mintIndex",
						"type": "uint32"
					}
				],
				"name": "checkMintIndex",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "creatorContractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "claimIndex",
						"type": "uint256"
					},
					{
						"internalType": "uint32[]",
						"name": "mintIndices",
						"type": "uint32[]"
					}
				],
				"name": "checkMintIndices",
				"outputs": [
					{
						"internalType": "bool[]",
						"name": "minted",
						"type": "bool[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "creatorContractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "claimIndex",
						"type": "uint256"
					}
				],
				"name": "getClaim",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint32",
								"name": "total",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "totalMax",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "walletMax",
								"type": "uint32"
							},
							{
								"internalType": "uint48",
								"name": "startDate",
								"type": "uint48"
							},
							{
								"internalType": "uint48",
								"name": "endDate",
								"type": "uint48"
							},
							{
								"internalType": "enum IERC1155LazyClaim.StorageProtocol",
								"name": "storageProtocol",
								"type": "uint8"
							},
							{
								"internalType": "bytes32",
								"name": "merkleRoot",
								"type": "bytes32"
							},
							{
								"internalType": "string",
								"name": "location",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "tokenId",
								"type": "uint256"
							}
						],
						"internalType": "struct IERC1155LazyClaim.Claim",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "creatorContractAddress",
						"type": "address"
					}
				],
				"name": "getClaimCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "minter",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "creatorContractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "claimIndex",
						"type": "uint256"
					}
				],
				"name": "getTotalMints",
				"outputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "creatorContractAddress",
						"type": "address"
					},
					{
						"components": [
							{
								"internalType": "uint32",
								"name": "totalMax",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "walletMax",
								"type": "uint32"
							},
							{
								"internalType": "uint48",
								"name": "startDate",
								"type": "uint48"
							},
							{
								"internalType": "uint48",
								"name": "endDate",
								"type": "uint48"
							},
							{
								"internalType": "enum IERC1155LazyClaim.StorageProtocol",
								"name": "storageProtocol",
								"type": "uint8"
							},
							{
								"internalType": "bytes32",
								"name": "merkleRoot",
								"type": "bytes32"
							},
							{
								"internalType": "string",
								"name": "location",
								"type": "string"
							}
						],
						"internalType": "struct IERC1155LazyClaim.ClaimParameters",
						"name": "claimParameters",
						"type": "tuple"
					}
				],
				"name": "initializeClaim",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "creatorContractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "claimIndex",
						"type": "uint256"
					},
					{
						"internalType": "uint32",
						"name": "mintIndex",
						"type": "uint32"
					},
					{
						"internalType": "bytes32[]",
						"name": "merkleProof",
						"type": "bytes32[]"
					}
				],
				"name": "mint",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "creatorContractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "claimIndex",
						"type": "uint256"
					},
					{
						"internalType": "uint16",
						"name": "mintCount",
						"type": "uint16"
					},
					{
						"internalType": "uint32[]",
						"name": "mintIndices",
						"type": "uint32[]"
					},
					{
						"internalType": "bytes32[][]",
						"name": "merkleProofs",
						"type": "bytes32[][]"
					}
				],
				"name": "mintBatch",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes4",
						"name": "interfaceId",
						"type": "bytes4"
					}
				],
				"name": "supportsInterface",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "creatorContractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "tokenURI",
				"outputs": [
					{
						"internalType": "string",
						"name": "uri",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "creatorContractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "claimIndex",
						"type": "uint256"
					},
					{
						"components": [
							{
								"internalType": "uint32",
								"name": "totalMax",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "walletMax",
								"type": "uint32"
							},
							{
								"internalType": "uint48",
								"name": "startDate",
								"type": "uint48"
							},
							{
								"internalType": "uint48",
								"name": "endDate",
								"type": "uint48"
							},
							{
								"internalType": "enum IERC1155LazyClaim.StorageProtocol",
								"name": "storageProtocol",
								"type": "uint8"
							},
							{
								"internalType": "bytes32",
								"name": "merkleRoot",
								"type": "bytes32"
							},
							{
								"internalType": "string",
								"name": "location",
								"type": "string"
							}
						],
						"internalType": "struct IERC1155LazyClaim.ClaimParameters",
						"name": "claimParameters",
						"type": "tuple"
					}
				],
				"name": "updateClaim",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "manifold.xyz",
			"kind": "dev",
			"methods": {
				"supportsInterface(bytes4)": {
					"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
				}
			},
			"title": "Lazy Claim",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"checkMintIndex(address,uint256,uint32)": {
					"notice": "See {IERC1155LazyClaim-checkMintIndex}."
				},
				"checkMintIndices(address,uint256,uint32[])": {
					"notice": "See {IERC1155LazyClaim-checkMintIndices}."
				},
				"getClaim(address,uint256)": {
					"notice": "See {IERC1155LazyClaim-getClaim}."
				},
				"getClaimCount(address)": {
					"notice": "See {IERC1155LazyClaim-getClaimCount}."
				},
				"getTotalMints(address,address,uint256)": {
					"notice": "See {IERC1155LazyClaim-getTotalMints}."
				},
				"initializeClaim(address,(uint32,uint32,uint48,uint48,uint8,bytes32,string))": {
					"notice": "See {IERC1155LazyClaim-initializeClaim}."
				},
				"mint(address,uint256,uint32,bytes32[])": {
					"notice": "See {IERC1155LazyClaim-mint}."
				},
				"mintBatch(address,uint256,uint16,uint32[],bytes32[][])": {
					"notice": "See {IERC1155LazyClaim-mintBatch}."
				},
				"tokenURI(address,uint256)": {
					"notice": "See {ICreatorExtensionTokenURI-tokenURI}."
				},
				"updateClaim(address,uint256,(uint32,uint32,uint48,uint48,uint8,bytes32,string))": {
					"notice": "See {IERC1155LazyClaim-updateClaim}."
				}
			},
			"notice": "Lazy claim with optional whitelist ERC1155 tokens",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/manifold/lazyclaim/ERC1155LazyClaim.sol": "ERC1155LazyClaim"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 1000
		},
		"remappings": []
	},
	"sources": {
		"@manifoldxyz/creator-core-solidity/contracts/core/CreatorCore.sol": {
			"keccak256": "0x903427a3f59de8a7a1f67dc47ceb504b31cfbf51e1fdf0d9f6f66f73768cd869",
			"license": "MIT",
			"urls": [
				"bzz-raw://361661451fe4282dfbf4a168233b8c1dbca134893f90960f1349c310f52e7321",
				"dweb:/ipfs/QmWPuxaU4wh1iXLZQBpEy8Re9VmacrnVGTXrPScJkazRtN"
			]
		},
		"@manifoldxyz/creator-core-solidity/contracts/core/ICreatorCore.sol": {
			"keccak256": "0x2dc54667c7182b70fbfcb5c0775b098d9b6b652cbebdd55d2ef7e4676b84af4b",
			"license": "MIT",
			"urls": [
				"bzz-raw://383cef86be81bc48af21a27e945b82dcbb5ed1c1771a7bb68179538c6f8d6b71",
				"dweb:/ipfs/QmV345QPgtbZTqui7YQeA95QB3YCDnG7bX4H5RyUhTd4CX"
			]
		},
		"@manifoldxyz/creator-core-solidity/contracts/core/IERC1155CreatorCore.sol": {
			"keccak256": "0xc91d0050b622fbb41b7516c6a8c75ab6236e6a52feab681d36fb75b8b49fc8c0",
			"license": "MIT",
			"urls": [
				"bzz-raw://f045081bb40c91837c076530bb07b9f8b7fa77cbd1191748a12920f01f1678f8",
				"dweb:/ipfs/QmP5kx53wBz2eUqZV26ttYJmsHP7R9n3rF6dAbTjVPh5gL"
			]
		},
		"@manifoldxyz/creator-core-solidity/contracts/extensions/ICreatorExtensionTokenURI.sol": {
			"keccak256": "0x6c8ca804ee7dea9d78f0dacdd9233b1b75ca2b2fa517f52f0fdf6beb34780a51",
			"license": "MIT",
			"urls": [
				"bzz-raw://4a04a6f0cce2bbdb022a8125e147519c7fbaa89692c8f0cfee69a67a2956316f",
				"dweb:/ipfs/QmdUxwBEnFshm1j5FEcJctC7DbFWUznis2LaPcKR7FEZX7"
			]
		},
		"@manifoldxyz/libraries-solidity/contracts/access/AdminControl.sol": {
			"keccak256": "0xaed5e7784e33745ab1b16f1d87b22084a8b25d531c1dcb8dc41fc2a89e2617da",
			"license": "MIT",
			"urls": [
				"bzz-raw://44837a9cc639062b2d7424a10e9d579b8d3a9bc1cefede2cfbb917bee8f452ae",
				"dweb:/ipfs/QmburkqmRDZYWjKPRUynhdfkAfP5QDKcXH4WCbH1JC8UDq"
			]
		},
		"@manifoldxyz/libraries-solidity/contracts/access/IAdminControl.sol": {
			"keccak256": "0x7cc2e4e7d9052532f445e62ec1fa2f05cc0f5d1d8ee1fea913b43a132277bf2f",
			"license": "MIT",
			"urls": [
				"bzz-raw://266618317d0654fe209b5450b8b5afa3a4a8d41294a2b37ddbae540099859887",
				"dweb:/ipfs/QmYksDqoxhachoqZquXGtjfiuAWJ1rxAKLtUYPL3YboBkE"
			]
		},
		"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
			"keccak256": "0x3f0f878c796dfc7feba6d3c4e3e526c14c7deae8b7bfc71088e3f38fab0d77b3",
			"license": "MIT",
			"urls": [
				"bzz-raw://69bf7d357ce97852f4fb71045919b1bb2c0ad0c820e3f06b9dd4451b2dc5a343",
				"dweb:/ipfs/QmWt96ZviufDu2qqS7Ln6UCJjfLyoFKbo6YKn54ao3o94z"
			]
		},
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9",
			"license": "MIT",
			"urls": [
				"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981",
				"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51"
			]
		},
		"@openzeppelin/contracts/interfaces/IERC165.sol": {
			"keccak256": "0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a",
			"license": "MIT",
			"urls": [
				"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb",
				"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q"
			]
		},
		"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
			"keccak256": "0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935",
			"license": "MIT",
			"urls": [
				"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2",
				"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"@openzeppelin/contracts/utils/Strings.sol": {
			"keccak256": "0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45",
			"license": "MIT",
			"urls": [
				"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30",
				"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2"
			]
		},
		"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol": {
			"keccak256": "0x9c35727c74a6ffd8d02237b414e7bfb532c0323b1088709def98ea5c628157de",
			"license": "MIT",
			"urls": [
				"bzz-raw://43ea1c4a5760f18794645133057e0a3df8eeac81a6ba266fb95f28233f088662",
				"dweb:/ipfs/QmbUHWmwqBMrub71Rs3dLnAoVkf2HPzmUAKfA6Eu28P3G7"
			]
		},
		"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
			"keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
			"license": "MIT",
			"urls": [
				"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
				"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
			]
		},
		"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol": {
			"keccak256": "0xf7291d7213336b00ee7edbf7cd5034778dd7b0bda2a7489e664f1e5cacc6c24e",
			"license": "MIT",
			"urls": [
				"bzz-raw://a3671a157cfdc73f334fc9e584862e1b3b48e8b771cde69d79834b03dc5c2826",
				"dweb:/ipfs/QmVJnMc3FLyYzJFktqwinaZes3pnRPuU1wKmBGvGRfh4rc"
			]
		},
		"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
			"keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
			"license": "MIT",
			"urls": [
				"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
				"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
			]
		},
		"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
			"keccak256": "0x9772845c886f87a3aab315f8d6b68aa599027c20f441b131cd4afaf65b588900",
			"license": "MIT",
			"urls": [
				"bzz-raw://ad2f29a9c17a4f746416c9e254e17671f43c409dbfa6e4d7d76c3e4a83212d31",
				"dweb:/ipfs/QmTqU65L6iu6yqmXKzcNLPioR8etzKPWycpDJCm17ifVdS"
			]
		},
		"contracts/manifold/lazyclaim/ERC1155LazyClaim.sol": {
			"keccak256": "0xfc1eec2e87188b62e82132d6706cac7b35fec5ad8a0af0eb0e3bc5128236d1ec",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a0cd60e93d6107081ffb914376bb133099cc4fa597310d7f0fef4ddb14851b9",
				"dweb:/ipfs/QmXR5ebkrSFBxdh3eQMT6Ujmq4GZhcK6LtYbb4DJET9WiP"
			]
		},
		"contracts/manifold/lazyclaim/IERC1155LazyClaim.sol": {
			"keccak256": "0x0ca30bdada9a8e52efd7c27584f25445b09631c2b8d5bc32b153d6b67a6ee253",
			"license": "MIT",
			"urls": [
				"bzz-raw://3694fc3dee20d8ded63da8d88e48c6e9d7b22b83ff14508529249f2408b70891",
				"dweb:/ipfs/QmUR1SJACUyP4cTNjMmamnxwELpvTmCSNq8c4VmKkBN1Rn"
			]
		}
	},
	"version": 1
}