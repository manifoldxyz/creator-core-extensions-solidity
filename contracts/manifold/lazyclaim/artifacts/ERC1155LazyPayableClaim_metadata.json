{
	"compiler": {
		"version": "0.8.17+commit.8df45f5f"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "delegationRegistry",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "creatorContract",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint224",
						"name": "claimIndex",
						"type": "uint224"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "initializer",
						"type": "address"
					}
				],
				"name": "ClaimInitialized",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "creatorContract",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "claimIndex",
						"type": "uint256"
					}
				],
				"name": "ClaimMint",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "creatorContract",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "claimIndex",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint16",
						"name": "mintCount",
						"type": "uint16"
					}
				],
				"name": "ClaimMintBatch",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "DELEGATION_REGISTRY",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "creatorContractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "claimIndex",
						"type": "uint256"
					},
					{
						"internalType": "address[]",
						"name": "recipients",
						"type": "address[]"
					},
					{
						"internalType": "uint16[]",
						"name": "amounts",
						"type": "uint16[]"
					}
				],
				"name": "airdrop",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "creatorContractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "claimIndex",
						"type": "uint256"
					},
					{
						"internalType": "uint32",
						"name": "mintIndex",
						"type": "uint32"
					}
				],
				"name": "checkMintIndex",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "creatorContractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "claimIndex",
						"type": "uint256"
					},
					{
						"internalType": "uint32[]",
						"name": "mintIndices",
						"type": "uint32[]"
					}
				],
				"name": "checkMintIndices",
				"outputs": [
					{
						"internalType": "bool[]",
						"name": "minted",
						"type": "bool[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "creatorContractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "claimIndex",
						"type": "uint256"
					}
				],
				"name": "getClaim",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint32",
								"name": "total",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "totalMax",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "walletMax",
								"type": "uint32"
							},
							{
								"internalType": "uint48",
								"name": "startDate",
								"type": "uint48"
							},
							{
								"internalType": "uint48",
								"name": "endDate",
								"type": "uint48"
							},
							{
								"internalType": "enum IERC1155LazyPayableClaim.StorageProtocol",
								"name": "storageProtocol",
								"type": "uint8"
							},
							{
								"internalType": "bytes32",
								"name": "merkleRoot",
								"type": "bytes32"
							},
							{
								"internalType": "string",
								"name": "location",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "tokenId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "cost",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "paymentReceiver",
								"type": "address"
							}
						],
						"internalType": "struct IERC1155LazyPayableClaim.Claim",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "creatorContractAddress",
						"type": "address"
					}
				],
				"name": "getClaimCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "minter",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "creatorContractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "claimIndex",
						"type": "uint256"
					}
				],
				"name": "getTotalMints",
				"outputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "creatorContractAddress",
						"type": "address"
					},
					{
						"components": [
							{
								"internalType": "uint32",
								"name": "totalMax",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "walletMax",
								"type": "uint32"
							},
							{
								"internalType": "uint48",
								"name": "startDate",
								"type": "uint48"
							},
							{
								"internalType": "uint48",
								"name": "endDate",
								"type": "uint48"
							},
							{
								"internalType": "enum IERC1155LazyPayableClaim.StorageProtocol",
								"name": "storageProtocol",
								"type": "uint8"
							},
							{
								"internalType": "bytes32",
								"name": "merkleRoot",
								"type": "bytes32"
							},
							{
								"internalType": "string",
								"name": "location",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "cost",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "paymentReceiver",
								"type": "address"
							}
						],
						"internalType": "struct IERC1155LazyPayableClaim.ClaimParameters",
						"name": "claimParameters",
						"type": "tuple"
					}
				],
				"name": "initializeClaim",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "creatorContractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "claimIndex",
						"type": "uint256"
					},
					{
						"internalType": "uint32",
						"name": "mintIndex",
						"type": "uint32"
					},
					{
						"internalType": "bytes32[]",
						"name": "merkleProof",
						"type": "bytes32[]"
					},
					{
						"internalType": "address",
						"name": "mintFor",
						"type": "address"
					}
				],
				"name": "mint",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "creatorContractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "claimIndex",
						"type": "uint256"
					},
					{
						"internalType": "uint16",
						"name": "mintCount",
						"type": "uint16"
					},
					{
						"internalType": "uint32[]",
						"name": "mintIndices",
						"type": "uint32[]"
					},
					{
						"internalType": "bytes32[][]",
						"name": "merkleProofs",
						"type": "bytes32[][]"
					},
					{
						"internalType": "address",
						"name": "mintFor",
						"type": "address"
					}
				],
				"name": "mintBatch",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes4",
						"name": "interfaceId",
						"type": "bytes4"
					}
				],
				"name": "supportsInterface",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "creatorContractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "tokenURI",
				"outputs": [
					{
						"internalType": "string",
						"name": "uri",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "creatorContractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "claimIndex",
						"type": "uint256"
					},
					{
						"components": [
							{
								"internalType": "uint32",
								"name": "totalMax",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "walletMax",
								"type": "uint32"
							},
							{
								"internalType": "uint48",
								"name": "startDate",
								"type": "uint48"
							},
							{
								"internalType": "uint48",
								"name": "endDate",
								"type": "uint48"
							},
							{
								"internalType": "enum IERC1155LazyPayableClaim.StorageProtocol",
								"name": "storageProtocol",
								"type": "uint8"
							},
							{
								"internalType": "bytes32",
								"name": "merkleRoot",
								"type": "bytes32"
							},
							{
								"internalType": "string",
								"name": "location",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "cost",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "paymentReceiver",
								"type": "address"
							}
						],
						"internalType": "struct IERC1155LazyPayableClaim.ClaimParameters",
						"name": "claimParameters",
						"type": "tuple"
					}
				],
				"name": "updateClaim",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "manifold.xyz",
			"kind": "dev",
			"methods": {
				"supportsInterface(bytes4)": {
					"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
				}
			},
			"title": "Lazy Payable Claim",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"airdrop(address,uint256,address[],uint16[])": {
					"notice": "See {IERC1155LazyPayableClaim-airdrop}."
				},
				"checkMintIndex(address,uint256,uint32)": {
					"notice": "See {IERC1155LazyClaim-checkMintIndex}."
				},
				"checkMintIndices(address,uint256,uint32[])": {
					"notice": "See {IERC1155LazyClaim-checkMintIndices}."
				},
				"getClaim(address,uint256)": {
					"notice": "See {IERC1155LazyClaim-getClaim}."
				},
				"getClaimCount(address)": {
					"notice": "See {IERC1155LazyClaim-getClaimCount}."
				},
				"getTotalMints(address,address,uint256)": {
					"notice": "See {IERC1155LazyClaim-getTotalMints}."
				},
				"initializeClaim(address,(uint32,uint32,uint48,uint48,uint8,bytes32,string,uint256,address))": {
					"notice": "See {IERC1155LazyClaim-initializeClaim}."
				},
				"mint(address,uint256,uint32,bytes32[],address)": {
					"notice": "See {IERC1155LazyClaim-mint}."
				},
				"mintBatch(address,uint256,uint16,uint32[],bytes32[][],address)": {
					"notice": "See {IERC1155LazyClaim-mintBatch}."
				},
				"tokenURI(address,uint256)": {
					"notice": "See {ICreatorExtensionTokenURI-tokenURI}."
				},
				"updateClaim(address,uint256,(uint32,uint32,uint48,uint48,uint8,bytes32,string,uint256,address))": {
					"notice": "See {IERC1155LazyClaim-updateClaim}."
				}
			},
			"notice": "Lazy claim with optional whitelist ERC1155 tokens",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/manifold/lazyclaim/ERC1155LazyPayableClaim.sol": "ERC1155LazyPayableClaim"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@manifoldxyz/creator-core-solidity/contracts/core/CreatorCore.sol": {
			"keccak256": "0x903427a3f59de8a7a1f67dc47ceb504b31cfbf51e1fdf0d9f6f66f73768cd869",
			"license": "MIT",
			"urls": [
				"bzz-raw://361661451fe4282dfbf4a168233b8c1dbca134893f90960f1349c310f52e7321",
				"dweb:/ipfs/QmWPuxaU4wh1iXLZQBpEy8Re9VmacrnVGTXrPScJkazRtN"
			]
		},
		"@manifoldxyz/creator-core-solidity/contracts/core/ICreatorCore.sol": {
			"keccak256": "0x2dc54667c7182b70fbfcb5c0775b098d9b6b652cbebdd55d2ef7e4676b84af4b",
			"license": "MIT",
			"urls": [
				"bzz-raw://383cef86be81bc48af21a27e945b82dcbb5ed1c1771a7bb68179538c6f8d6b71",
				"dweb:/ipfs/QmV345QPgtbZTqui7YQeA95QB3YCDnG7bX4H5RyUhTd4CX"
			]
		},
		"@manifoldxyz/creator-core-solidity/contracts/core/IERC1155CreatorCore.sol": {
			"keccak256": "0xc91d0050b622fbb41b7516c6a8c75ab6236e6a52feab681d36fb75b8b49fc8c0",
			"license": "MIT",
			"urls": [
				"bzz-raw://f045081bb40c91837c076530bb07b9f8b7fa77cbd1191748a12920f01f1678f8",
				"dweb:/ipfs/QmP5kx53wBz2eUqZV26ttYJmsHP7R9n3rF6dAbTjVPh5gL"
			]
		},
		"@manifoldxyz/creator-core-solidity/contracts/extensions/ICreatorExtensionTokenURI.sol": {
			"keccak256": "0x6c8ca804ee7dea9d78f0dacdd9233b1b75ca2b2fa517f52f0fdf6beb34780a51",
			"license": "MIT",
			"urls": [
				"bzz-raw://4a04a6f0cce2bbdb022a8125e147519c7fbaa89692c8f0cfee69a67a2956316f",
				"dweb:/ipfs/QmdUxwBEnFshm1j5FEcJctC7DbFWUznis2LaPcKR7FEZX7"
			]
		},
		"@manifoldxyz/libraries-solidity/contracts/access/AdminControl.sol": {
			"keccak256": "0xaed5e7784e33745ab1b16f1d87b22084a8b25d531c1dcb8dc41fc2a89e2617da",
			"license": "MIT",
			"urls": [
				"bzz-raw://44837a9cc639062b2d7424a10e9d579b8d3a9bc1cefede2cfbb917bee8f452ae",
				"dweb:/ipfs/QmburkqmRDZYWjKPRUynhdfkAfP5QDKcXH4WCbH1JC8UDq"
			]
		},
		"@manifoldxyz/libraries-solidity/contracts/access/IAdminControl.sol": {
			"keccak256": "0x7cc2e4e7d9052532f445e62ec1fa2f05cc0f5d1d8ee1fea913b43a132277bf2f",
			"license": "MIT",
			"urls": [
				"bzz-raw://266618317d0654fe209b5450b8b5afa3a4a8d41294a2b37ddbae540099859887",
				"dweb:/ipfs/QmYksDqoxhachoqZquXGtjfiuAWJ1rxAKLtUYPL3YboBkE"
			]
		},
		"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
			"keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
			"license": "MIT",
			"urls": [
				"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
				"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
			]
		},
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
			"license": "MIT",
			"urls": [
				"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
				"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
			]
		},
		"@openzeppelin/contracts/interfaces/IERC165.sol": {
			"keccak256": "0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a",
			"license": "MIT",
			"urls": [
				"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb",
				"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q"
			]
		},
		"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
			"keccak256": "0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935",
			"license": "MIT",
			"urls": [
				"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2",
				"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"@openzeppelin/contracts/utils/Strings.sol": {
			"keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
			"license": "MIT",
			"urls": [
				"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
				"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
			]
		},
		"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol": {
			"keccak256": "0x596ed72a251d391b814a4aa19d7acb02ebdcc92ba27d3fff74a6f0c158b12ab7",
			"license": "MIT",
			"urls": [
				"bzz-raw://d5f49013d50b1011c842f76e96f3c3f146ca7cb15084c8805575e0e0e1a5c700",
				"dweb:/ipfs/QmQ3n5qiuioUA74heD6ZddNkYg1kYihjQBNcy9zgwYXKgM"
			]
		},
		"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
			"keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
			"license": "MIT",
			"urls": [
				"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
				"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
			]
		},
		"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol": {
			"keccak256": "0xc65c83c1039508fa7a42a09a3c6a32babd1c438ba4dbb23581255e784b5d5eed",
			"license": "MIT",
			"urls": [
				"bzz-raw://a1b3b38db0f76429db899909025e534c366415e9ea8b5ddc4c8901e6a7fc1461",
				"dweb:/ipfs/QmYv1KxyHjLEky9JWNSsSfpGJbiCxFyzVFgTwQKpiqYGUg"
			]
		},
		"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
			"keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
			"license": "MIT",
			"urls": [
				"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
				"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
			]
		},
		"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
			"keccak256": "0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4",
			"license": "MIT",
			"urls": [
				"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271",
				"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24"
			]
		},
		"contracts/libraries/delegation-registry/IDelegationRegistry.sol": {
			"keccak256": "0xcd05af87cd4565299ff4cc928f6fd6a83f439eee2669c0013998de108db56ae7",
			"license": "CC0-1.0",
			"urls": [
				"bzz-raw://b4e42f2b302ba8aabea827e1da186e59b68d688ba9ff014a2bcd24e8e36fa03a",
				"dweb:/ipfs/QmSgoWckjVR5iXagWPy2uZ8chMwcLTVUzCG17AmmJ1JJGD"
			]
		},
		"contracts/manifold/lazyclaim/ERC1155LazyPayableClaim.sol": {
			"keccak256": "0xd3727222e84394d733a4bfac9e16b62549443eaf72226baa8ac0808b0562e667",
			"license": "MIT",
			"urls": [
				"bzz-raw://3a4b22965bdf2c039b1e9d0802e0c304c36d1ffa4e3b6522fcbdda90c645b04e",
				"dweb:/ipfs/QmYUce9isf27vJSzzYeULEUx4RxnFDFhNoVnk8VLEjLhLe"
			]
		},
		"contracts/manifold/lazyclaim/IERC1155LazyPayableClaim.sol": {
			"keccak256": "0x7c8ff45010cb3b2a87eccecbf09b1153b04f9c01c3979f48c368a18ab6979dbb",
			"license": "MIT",
			"urls": [
				"bzz-raw://e191d3ce4d121999f83adfe90af5d5ea78461a63b11be60cc1c75f7383dbbc96",
				"dweb:/ipfs/QmaVSPwf3avEnXVwwt2LUxd97mLxoPmVbvpvxWNTSEg32M"
			]
		}
	},
	"version": 1
}