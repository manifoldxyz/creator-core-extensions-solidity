{
	"compiler": {
		"version": "0.8.18+commit.87f61d96"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "initialOwner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "delegationRegistry",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					}
				],
				"name": "AdminApproved",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					}
				],
				"name": "AdminRevoked",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "creatorContract",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "instanceId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "initializer",
						"type": "address"
					}
				],
				"name": "ClaimInitialized",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "creatorContract",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "instanceId",
						"type": "uint256"
					}
				],
				"name": "ClaimMint",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "creatorContract",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "instanceId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint16",
						"name": "mintCount",
						"type": "uint16"
					}
				],
				"name": "ClaimMintBatch",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "creatorContract",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "instanceId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint16",
						"name": "mintCount",
						"type": "uint16"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "proxy",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "mintFor",
						"type": "address"
					}
				],
				"name": "ClaimMintProxy",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "creatorContract",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "instanceId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint16",
						"name": "mintCount",
						"type": "uint16"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "proxy",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "mintFor",
						"type": "address"
					}
				],
				"name": "ClaimMintSignature",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "creatorContract",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "instanceId",
						"type": "uint256"
					}
				],
				"name": "ClaimUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "DELEGATION_REGISTRY",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "MEMBERSHIP_ADDRESS",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "MINT_FEE",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "MINT_FEE_MERKLE",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "creatorContractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "instanceId",
						"type": "uint256"
					},
					{
						"internalType": "address[]",
						"name": "recipients",
						"type": "address[]"
					},
					{
						"internalType": "uint16[]",
						"name": "amounts",
						"type": "uint16[]"
					}
				],
				"name": "airdrop",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "admin",
						"type": "address"
					}
				],
				"name": "approveAdmin",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "creatorContractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "instanceId",
						"type": "uint256"
					},
					{
						"internalType": "uint32",
						"name": "mintIndex",
						"type": "uint32"
					}
				],
				"name": "checkMintIndex",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "creatorContractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "instanceId",
						"type": "uint256"
					},
					{
						"internalType": "uint32[]",
						"name": "mintIndices",
						"type": "uint32[]"
					}
				],
				"name": "checkMintIndices",
				"outputs": [
					{
						"internalType": "bool[]",
						"name": "minted",
						"type": "bool[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "creatorContractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "instanceId",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "locationChunk",
						"type": "string"
					}
				],
				"name": "extendTokenURI",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAdmins",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "admins",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "creatorContractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "instanceId",
						"type": "uint256"
					}
				],
				"name": "getClaim",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint32",
								"name": "total",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "totalMax",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "walletMax",
								"type": "uint32"
							},
							{
								"internalType": "uint48",
								"name": "startDate",
								"type": "uint48"
							},
							{
								"internalType": "uint48",
								"name": "endDate",
								"type": "uint48"
							},
							{
								"internalType": "enum ILazyPayableClaim.StorageProtocol",
								"name": "storageProtocol",
								"type": "uint8"
							},
							{
								"internalType": "uint8",
								"name": "contractVersion",
								"type": "uint8"
							},
							{
								"internalType": "bool",
								"name": "identical",
								"type": "bool"
							},
							{
								"internalType": "bytes32",
								"name": "merkleRoot",
								"type": "bytes32"
							},
							{
								"internalType": "string",
								"name": "location",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "cost",
								"type": "uint256"
							},
							{
								"internalType": "address payable",
								"name": "paymentReceiver",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "erc20",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "signingAddress",
								"type": "address"
							}
						],
						"internalType": "struct IERC721LazyPayableClaim.Claim",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "creatorContractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "getClaimForToken",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "instanceId",
						"type": "uint256"
					},
					{
						"components": [
							{
								"internalType": "uint32",
								"name": "total",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "totalMax",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "walletMax",
								"type": "uint32"
							},
							{
								"internalType": "uint48",
								"name": "startDate",
								"type": "uint48"
							},
							{
								"internalType": "uint48",
								"name": "endDate",
								"type": "uint48"
							},
							{
								"internalType": "enum ILazyPayableClaim.StorageProtocol",
								"name": "storageProtocol",
								"type": "uint8"
							},
							{
								"internalType": "uint8",
								"name": "contractVersion",
								"type": "uint8"
							},
							{
								"internalType": "bool",
								"name": "identical",
								"type": "bool"
							},
							{
								"internalType": "bytes32",
								"name": "merkleRoot",
								"type": "bytes32"
							},
							{
								"internalType": "string",
								"name": "location",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "cost",
								"type": "uint256"
							},
							{
								"internalType": "address payable",
								"name": "paymentReceiver",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "erc20",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "signingAddress",
								"type": "address"
							}
						],
						"internalType": "struct IERC721LazyPayableClaim.Claim",
						"name": "claim",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "minter",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "creatorContractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "instanceId",
						"type": "uint256"
					}
				],
				"name": "getTotalMints",
				"outputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "creatorContractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "instanceId",
						"type": "uint256"
					},
					{
						"components": [
							{
								"internalType": "uint32",
								"name": "totalMax",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "walletMax",
								"type": "uint32"
							},
							{
								"internalType": "uint48",
								"name": "startDate",
								"type": "uint48"
							},
							{
								"internalType": "uint48",
								"name": "endDate",
								"type": "uint48"
							},
							{
								"internalType": "enum ILazyPayableClaim.StorageProtocol",
								"name": "storageProtocol",
								"type": "uint8"
							},
							{
								"internalType": "bool",
								"name": "identical",
								"type": "bool"
							},
							{
								"internalType": "bytes32",
								"name": "merkleRoot",
								"type": "bytes32"
							},
							{
								"internalType": "string",
								"name": "location",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "cost",
								"type": "uint256"
							},
							{
								"internalType": "address payable",
								"name": "paymentReceiver",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "erc20",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "signingAddress",
								"type": "address"
							}
						],
						"internalType": "struct IERC721LazyPayableClaim.ClaimParameters",
						"name": "claimParameters",
						"type": "tuple"
					}
				],
				"name": "initializeClaim",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "admin",
						"type": "address"
					}
				],
				"name": "isAdmin",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "creatorContractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "instanceId",
						"type": "uint256"
					},
					{
						"internalType": "uint32",
						"name": "mintIndex",
						"type": "uint32"
					},
					{
						"internalType": "bytes32[]",
						"name": "merkleProof",
						"type": "bytes32[]"
					},
					{
						"internalType": "address",
						"name": "mintFor",
						"type": "address"
					}
				],
				"name": "mint",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "creatorContractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "instanceId",
						"type": "uint256"
					},
					{
						"internalType": "uint16",
						"name": "mintCount",
						"type": "uint16"
					},
					{
						"internalType": "uint32[]",
						"name": "mintIndices",
						"type": "uint32[]"
					},
					{
						"internalType": "bytes32[][]",
						"name": "merkleProofs",
						"type": "bytes32[][]"
					},
					{
						"internalType": "address",
						"name": "mintFor",
						"type": "address"
					}
				],
				"name": "mintBatch",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "creatorContractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "instanceId",
						"type": "uint256"
					},
					{
						"internalType": "uint16",
						"name": "mintCount",
						"type": "uint16"
					},
					{
						"internalType": "uint32[]",
						"name": "mintIndices",
						"type": "uint32[]"
					},
					{
						"internalType": "bytes32[][]",
						"name": "merkleProofs",
						"type": "bytes32[][]"
					},
					{
						"internalType": "address",
						"name": "mintFor",
						"type": "address"
					}
				],
				"name": "mintProxy",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "creatorContractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "instanceId",
						"type": "uint256"
					},
					{
						"internalType": "uint16",
						"name": "mintCount",
						"type": "uint16"
					},
					{
						"internalType": "bytes",
						"name": "signature",
						"type": "bytes"
					},
					{
						"internalType": "bytes32",
						"name": "message",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "nonce",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "mintFor",
						"type": "address"
					}
				],
				"name": "mintSignature",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "admin",
						"type": "address"
					}
				],
				"name": "revokeAdmin",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "membershipAddress",
						"type": "address"
					}
				],
				"name": "setMembershipAddress",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes4",
						"name": "interfaceId",
						"type": "bytes4"
					}
				],
				"name": "supportsInterface",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "creatorContractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "tokenURI",
				"outputs": [
					{
						"internalType": "string",
						"name": "uri",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "creatorContractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "instanceId",
						"type": "uint256"
					},
					{
						"components": [
							{
								"internalType": "uint32",
								"name": "totalMax",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "walletMax",
								"type": "uint32"
							},
							{
								"internalType": "uint48",
								"name": "startDate",
								"type": "uint48"
							},
							{
								"internalType": "uint48",
								"name": "endDate",
								"type": "uint48"
							},
							{
								"internalType": "enum ILazyPayableClaim.StorageProtocol",
								"name": "storageProtocol",
								"type": "uint8"
							},
							{
								"internalType": "bool",
								"name": "identical",
								"type": "bool"
							},
							{
								"internalType": "bytes32",
								"name": "merkleRoot",
								"type": "bytes32"
							},
							{
								"internalType": "string",
								"name": "location",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "cost",
								"type": "uint256"
							},
							{
								"internalType": "address payable",
								"name": "paymentReceiver",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "erc20",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "signingAddress",
								"type": "address"
							}
						],
						"internalType": "struct IERC721LazyPayableClaim.ClaimParameters",
						"name": "claimParameters",
						"type": "tuple"
					}
				],
				"name": "updateClaim",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "creatorContractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "instanceId",
						"type": "uint256"
					},
					{
						"internalType": "enum ILazyPayableClaim.StorageProtocol",
						"name": "storageProtocol",
						"type": "uint8"
					},
					{
						"internalType": "bool",
						"name": "identical",
						"type": "bool"
					},
					{
						"internalType": "string",
						"name": "location",
						"type": "string"
					}
				],
				"name": "updateTokenURIParams",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address payable",
						"name": "receiver",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "withdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "manifold.xyz",
			"kind": "dev",
			"methods": {
				"approveAdmin(address)": {
					"details": "See {IAdminControl-approveAdmin}."
				},
				"getAdmins()": {
					"details": "See {IAdminControl-getAdmins}."
				},
				"isAdmin(address)": {
					"details": "See {IAdminControl-isAdmin}."
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
				},
				"revokeAdmin(address)": {
					"details": "See {IAdminControl-revokeAdmin}."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"title": "Lazy Payable Claim",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"airdrop(address,uint256,address[],uint16[])": {
					"notice": "See {IERC721LazyClaim-airdrop}."
				},
				"checkMintIndex(address,uint256,uint32)": {
					"notice": "See {ILazyPayableClaim-checkMintIndex}."
				},
				"checkMintIndices(address,uint256,uint32[])": {
					"notice": "See {ILazyPayableClaim-checkMintIndices}."
				},
				"extendTokenURI(address,uint256,string)": {
					"notice": "See {IERC1155LazyClaim-extendTokenURI}."
				},
				"getClaim(address,uint256)": {
					"notice": "See {ILazyPayableClaim-getClaim}."
				},
				"getClaimForToken(address,uint256)": {
					"notice": "See {ILazyPayableClaim-getClaimForToken}."
				},
				"getTotalMints(address,address,uint256)": {
					"notice": "See {ILazyPayableClaim-getTotalMints}."
				},
				"initializeClaim(address,uint256,(uint32,uint32,uint48,uint48,uint8,bool,bytes32,string,uint256,address,address,address))": {
					"notice": "See {IERC721LazyClaim-initializeClaim}."
				},
				"mint(address,uint256,uint32,bytes32[],address)": {
					"notice": "See {ILazyPayableClaim-mint}."
				},
				"mintBatch(address,uint256,uint16,uint32[],bytes32[][],address)": {
					"notice": "See {ILazyPayableClaim-mintBatch}."
				},
				"mintProxy(address,uint256,uint16,uint32[],bytes32[][],address)": {
					"notice": "See {ILazyPayableClaim-mintProxy}."
				},
				"mintSignature(address,uint256,uint16,bytes,bytes32,bytes32,address)": {
					"notice": "See {ILazyPayableClaim-mintSignature}."
				},
				"setMembershipAddress(address)": {
					"notice": "See {ILazyPayableClaim-setMembershipAddress}."
				},
				"tokenURI(address,uint256)": {
					"notice": "See {ICreatorExtensionTokenURI-tokenURI}."
				},
				"updateClaim(address,uint256,(uint32,uint32,uint48,uint48,uint8,bool,bytes32,string,uint256,address,address,address))": {
					"notice": "See {IERC721LazyClaim-udpateClaim}."
				},
				"updateTokenURIParams(address,uint256,uint8,bool,string)": {
					"notice": "See {IERC721LazyClaim-updateTokenURIParams}."
				},
				"withdraw(address,uint256)": {
					"notice": "See {ILazyPayableClaim-withdraw}."
				}
			},
			"notice": "Lazy payable claim with optional whitelist ERC721 tokens",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"packages/manifold/contracts/lazyclaim/ERC721LazyPayableClaim.sol": "ERC721LazyPayableClaim"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 10
		},
		"remappings": []
	},
	"sources": {
		"@manifoldxyz/creator-core-solidity/contracts/core/ICreatorCore.sol": {
			"keccak256": "0x6bdcb757953594d3a259f1d68ec3d208ca42dba02115f08a6e32e2936ccb0349",
			"license": "MIT",
			"urls": [
				"bzz-raw://dd1853dabcd57eb9b735b3991cf59259cd28cdeca1353495b5c59dc0db2d85df",
				"dweb:/ipfs/QmfJLFZ7RoMvdR7kJLR7QmqreS1x5VNJSa7xvjVsC4mXte"
			]
		},
		"@manifoldxyz/creator-core-solidity/contracts/core/IERC721CreatorCore.sol": {
			"keccak256": "0xb168262afd1960a48d9c2088b7c24df3c0e5e190d2e2451e8af38983cf713bad",
			"license": "MIT",
			"urls": [
				"bzz-raw://8b8e621daf8a34967aa796482e02521390328f84a130f064e67aafc1b11748e5",
				"dweb:/ipfs/QmRC4suf2UXxkfy9NazSHwVAHLFeuzqAuQPmZrf1KQfX7f"
			]
		},
		"@manifoldxyz/creator-core-solidity/contracts/extensions/ICreatorExtensionTokenURI.sol": {
			"keccak256": "0x6c8ca804ee7dea9d78f0dacdd9233b1b75ca2b2fa517f52f0fdf6beb34780a51",
			"license": "MIT",
			"urls": [
				"bzz-raw://4a04a6f0cce2bbdb022a8125e147519c7fbaa89692c8f0cfee69a67a2956316f",
				"dweb:/ipfs/QmdUxwBEnFshm1j5FEcJctC7DbFWUznis2LaPcKR7FEZX7"
			]
		},
		"@manifoldxyz/libraries-solidity/contracts/access/AdminControl.sol": {
			"keccak256": "0xaed5e7784e33745ab1b16f1d87b22084a8b25d531c1dcb8dc41fc2a89e2617da",
			"license": "MIT",
			"urls": [
				"bzz-raw://44837a9cc639062b2d7424a10e9d579b8d3a9bc1cefede2cfbb917bee8f452ae",
				"dweb:/ipfs/QmburkqmRDZYWjKPRUynhdfkAfP5QDKcXH4WCbH1JC8UDq"
			]
		},
		"@manifoldxyz/libraries-solidity/contracts/access/IAdminControl.sol": {
			"keccak256": "0x7cc2e4e7d9052532f445e62ec1fa2f05cc0f5d1d8ee1fea913b43a132277bf2f",
			"license": "MIT",
			"urls": [
				"bzz-raw://266618317d0654fe209b5450b8b5afa3a4a8d41294a2b37ddbae540099859887",
				"dweb:/ipfs/QmYksDqoxhachoqZquXGtjfiuAWJ1rxAKLtUYPL3YboBkE"
			]
		},
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
			"license": "MIT",
			"urls": [
				"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
				"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
			"license": "MIT",
			"urls": [
				"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
				"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"@openzeppelin/contracts/utils/Strings.sol": {
			"keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
			"license": "MIT",
			"urls": [
				"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
				"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
			]
		},
		"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
			"keccak256": "0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58",
			"license": "MIT",
			"urls": [
				"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2",
				"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv"
			]
		},
		"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol": {
			"keccak256": "0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac",
			"license": "MIT",
			"urls": [
				"bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04",
				"dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG"
			]
		},
		"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
			"keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
			"license": "MIT",
			"urls": [
				"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
				"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
			]
		},
		"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
			"keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
			"license": "MIT",
			"urls": [
				"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
				"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
			]
		},
		"@openzeppelin/contracts/utils/math/Math.sol": {
			"keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
			"license": "MIT",
			"urls": [
				"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
				"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
			]
		},
		"@openzeppelin/contracts/utils/math/SignedMath.sol": {
			"keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
			"license": "MIT",
			"urls": [
				"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
				"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
			]
		},
		"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
			"keccak256": "0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514",
			"license": "MIT",
			"urls": [
				"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df",
				"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW"
			]
		},
		"packages/manifold/contracts/lazyclaim/ERC721LazyPayableClaim.sol": {
			"keccak256": "0xaaf71546b0d6bd00a14e94f399985f2bc38dffce41fe13586e3480ee7efa149a",
			"license": "MIT",
			"urls": [
				"bzz-raw://ba4dacc0f95267c66941d764acd3be6835b76d4b9578012ebea6354bb1200734",
				"dweb:/ipfs/QmXT6wXt94rC9LSfPaQmDLgVKcKzGvBLiGyinAhxDkMge9"
			]
		},
		"packages/manifold/contracts/lazyclaim/IERC721LazyPayableClaim.sol": {
			"keccak256": "0xf94de1d9a2f51b7037714269abb3a06a4e9da7c9812269cbdcf28967727647e4",
			"license": "MIT",
			"urls": [
				"bzz-raw://f0bbecb48aee6193b8030e23c7d156c895736e7f136138bf699afda4aa66fe78",
				"dweb:/ipfs/QmXn7AYtM9ajsasDb36MkW8UkZL4TQHiqnuzZSCQ8cWR7L"
			]
		},
		"packages/manifold/contracts/lazyclaim/ILazyPayableClaim.sol": {
			"keccak256": "0x5854277d084570cf151308d9d99a1e0f28d7f2830852e459bf9abf19d96eee37",
			"license": "MIT",
			"urls": [
				"bzz-raw://6fe8895a99615086c4d55743db3a2ee88c4d56d6023fd7a3095c33c934b6d53f",
				"dweb:/ipfs/QmYK3npqSWvSEveweCnquMrMyppaAQc1kbCpavpXJJPnmQ"
			]
		},
		"packages/manifold/contracts/lazyclaim/LazyPayableClaim.sol": {
			"keccak256": "0xe59c540df9d6652f80164faf9197edfc6ddea5869d68cd553a37e089d106c0b4",
			"license": "MIT",
			"urls": [
				"bzz-raw://6eb3501ffadce22ffbfd469478aae01ac931fe3d6c6c760444c499e28ff1087b",
				"dweb:/ipfs/QmdAPyKPA4RkgeNDbrnnTaP2cfy4qLKKzasRYCdVnvnZpa"
			]
		},
		"packages/manifold/contracts/libraries/IERC721CreatorCoreVersion.sol": {
			"keccak256": "0x444295533295fa48efbd07a89065a3bda5aab3b53a9737558b92bd2e9135aa2f",
			"license": "MIT",
			"urls": [
				"bzz-raw://0d7102cbddbdadb3ff9f17601b2e0d0ee68d0bb782d3c223288f0b7e4e02442a",
				"dweb:/ipfs/QmTwZ8DKP5sRdXbrtDVcGfyEMH5wrACiyPk3dygpCuYy5j"
			]
		},
		"packages/manifold/contracts/libraries/delegation-registry/IDelegationRegistry.sol": {
			"keccak256": "0xcd05af87cd4565299ff4cc928f6fd6a83f439eee2669c0013998de108db56ae7",
			"license": "CC0-1.0",
			"urls": [
				"bzz-raw://b4e42f2b302ba8aabea827e1da186e59b68d688ba9ff014a2bcd24e8e36fa03a",
				"dweb:/ipfs/QmSgoWckjVR5iXagWPy2uZ8chMwcLTVUzCG17AmmJ1JJGD"
			]
		},
		"packages/manifold/contracts/libraries/manifold-membership/IManifoldMembership.sol": {
			"keccak256": "0x7241904df8db1251bd48792a766c332e0cab42d3c92890c9a2140da30f081bfd",
			"license": "MIT",
			"urls": [
				"bzz-raw://7ac807da7fd1b532b5c4048204faf339e08aaacc902bdf2e96c8d358d23ef197",
				"dweb:/ipfs/QmZGDgwCnHeeBXmHxBZnD9ewdZHvt5e9ngwfuqBFz2HV7r"
			]
		}
	},
	"version": 1
}